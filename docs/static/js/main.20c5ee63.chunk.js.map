{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/notes.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","activeNote","id","note","type","payload","addNewNote","startLoadingNotes","uid","async","notes","notesSnap","collection","get","forEach","snap","push","data","loadNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","e","message","startUploading","file","active","text","allowOutsideClick","willOpen","showLoading","fileUrl","formData","FormData","append","resp","fetch","method","body","ok","json","secure_url","error","fileUpload","close","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","startLogout","signOut","logout","useForm","initialState","values","setValues","useState","target","name","value","newFormState","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","handleInputChange","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","newNote","Date","getTime","add","NotesAppBar","display","files","document","querySelector","click","NoteScreen","reset","activeId","useRef","useEffect","current","delete","startDelete","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setisLoggedIn","onAuthStateChanged","initialstate","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.20c5ee63.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD1ENCJ-7YrxVPej4Fb9ONyt0hK6x0Ifk0\",\r\n    authDomain: \"react-app-curso-c0b6b.firebaseapp.com\",\r\n    projectId: \"react-app-curso-c0b6b\",\r\n    storageBucket: \"react-app-curso-c0b6b.appspot.com\",\r\n    messagingSenderId: \"482078149117\",\r\n    appId: \"1:482078149117:web:23836b2a5298339cf0b194\"\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const types = {\r\n\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import Swal from 'sweetalert2';\r\nimport { types } from \"../types/types\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n\r\n        dispatch(activeNote(doc.id, newNote))\r\n        dispatch(addNewNote(doc.id, newNote))\r\n    }\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url;\r\n        }\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n        try {\r\n\r\n\r\n            await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n            dispatch(refreshNote(note.id, noteToFirestore));\r\n            Swal.fire('Saved', note.title, 'success')\r\n        } catch (e) {\r\n            Swal.fire('Error', e.message, 'error');\r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n        \r\n\r\n        Swal.close();\r\n    }\r\n}\r\nexport const startDelete = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { db } from '../firebase/firebase-config';\r\n\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snap => {\r\n        notes.push({\r\n            id:snap.id,\r\n            ...snap.data()\r\n        })\r\n    });\r\n\r\n\r\n    return notes;\r\n\r\n\r\n}","\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dv7wnxdvo/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }\r\n        else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n})","import Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading())\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name })\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(\r\n                e => {\r\n                    console.log(e)\r\n                    Swal.fire('Error', e.message, 'error')\r\n                });\r\n\r\n\r\n    }\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n\r\n            })\r\n    };\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout())\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch()\n    const { loading } = useSelector(state => state.ui);\n    const [formValues, handleInputChange] = useForm({\n        email: 'aaa@gmail.com',\n        password: '123456'\n    })\n\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n\n        e.preventDefault();\n        dispatch(startLoginEmailPassword(email, password))\n\n    }\n    const handleGoogleLogin = () => {\n\n        dispatch(startGoogleLogin())\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form\n                onSubmit={handleLogin}\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div\n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui)\n    console.log(msgError)\n\n    const [formValues, handleInputChange] = useForm({\n        name: 'Andres Kogan',\n        email: 'andreskm@gmail.com',\n        password: '123456',\n        password2: '123456'\n\n    })\n\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (isFormValid()) {\n\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\n        }\n    }\n\n    const isFormValid = () => {\n        if (name.trim().length === 0) {\n            dispatch(setError(\"Name is required\"));\n            return false;\n        }\n\n        else if (!validator.isEmail(email)) {\n\n            dispatch(setError(\"Email is not valid\"))\n            return false;\n        }\n\n        else if (password !== password2 || password.length < 5) {\n\n            dispatch(setError(\"Passwords should match and have a length of 6+ characteres\"))\n            return false;\n        }\n\n        dispatch(removeError())\n        return true;\n    }\n\n\n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form \n            onSubmit={handleRegister}\n            className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                {msgError &&\n\n                    <div className=\"auth__alert-error\">\n                        {msgError}\n\n                    </div>\n                }\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n\n\n    const handleEntryClick = () => {\n        console.log(\"clikc\")\n        dispatch(activeNote(id, {\n            date, title, body, url\n        })\n        );\n\n    }\n    return (\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n            onClick={handleEntryClick}>\n\n            {\n                url &&\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes)\n    console.log(notes)\n    return (\n        <div className=\"journal__entries\">\n\n            {\n                notes.map(note => (\n                    <JournalEntry\n                        key={note.id}\n                        {...note}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { startNewNote } from '../../actions/notes'\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch(startLogout())\n    }\n\n    const handleAddNew = () => {\n        dispatch(startNewNote());\n    }\n\n\n    return (\n        <aside className=\"journal__sidebar\">\n\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name} </span>\n                </h3>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\"\n                onClick={handleAddNew}\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />\n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes)\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active))\n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n\n        if (file) {\n            dispatch(startUploading(file))\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={handlePictureClick}\n                >\n                    Picture\n                </button>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleSave}>\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux'\nimport { activeNote, startDelete } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n    const { active: note } = useSelector(state => state.notes);\n    const [formValues, handleInputChange, reset] = useForm(note);\n    const { body, title, id } = formValues;\n    const activeId = useRef(note.id)\n    useEffect(() => {\n\n        if (note.id !== activeId.current) {\n            reset(note)\n            activeId.current = note.id\n        }\n\n\n    }, [note, reset])\n\n    useEffect(() => {\n\n        dispatch(activeNote(formValues.id, { ...formValues }))\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch(startDelete(id))\n    }\n\n\n\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {\n                    note.url &&\n                    <div className=\"notes__image\">\n                        <img\n                            src={note.url}\n                            alt=\"imagen\"\n                        />\n                    </div>\n                }\n\n\n            </div>\n            <button\n                className=\"btn btn-danger\"\n                onClick={handleDelete}>\n                delete\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes);\n\n\n\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n\n            <Sidebar />\n\n\n            <main>\n                {(active)\n                    ? (<NoteScreen />)\n                    : (<NothingSelected />)\n                }\n\n\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/auth/login\" />\r\n            )\r\n\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component {...props} />\r\n            )\r\n\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { firebase } from '../firebase/firebase-config'\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true)\n    const [isLoggedIn, setisLoggedIn] = useState(false)\n\n\n\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged(async (user) => {\n\n\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));\n                setisLoggedIn(true);\n\n                dispatch(startLoadingNotes(user.uid));\n            }\n            else {\n                setisLoggedIn(false);\n            }\n\n            setChecking(false);\n        });\n\n\n\n    }, [dispatch, setChecking]);\n\n\n\n    if (checking) {\n        return (\n            <h1>Loading ...</h1>\n        )\n    }\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        component={AuthRouter}\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRoute\n                        exact\n                        isAuthenticated={isLoggedIn}\n                        path=\"/\"\n                        component={JournalScreen}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialstate = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialstate, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\n\nexport const JournalApp = () => {\n\n    return (\n        <Provider store={store}>\n\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}